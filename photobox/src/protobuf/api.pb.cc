// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace xtech {
namespace selfomat {

namespace {

const ::google::protobuf::Descriptor* UpdateStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UpdateStatus_State_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_api_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_api_2eproto() {
  protobuf_AddDesc_api_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api.proto");
  GOOGLE_CHECK(file != NULL);
  UpdateStatus_descriptor_ = file->message_type(0);
  static const int UpdateStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStatus, current_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStatus, current_version_),
  };
  UpdateStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateStatus_descriptor_,
      UpdateStatus::default_instance_,
      UpdateStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStatus, _internal_metadata_),
      -1);
  UpdateStatus_State_descriptor_ = UpdateStatus_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateStatus_descriptor_, &UpdateStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2eproto() {
  delete UpdateStatus::default_instance_;
  delete UpdateStatus_reflection_;
}

void protobuf_AddDesc_api_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_api_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tapi.proto\022\016xtech.selfomat\"\215\001\n\014UpdateSt"
    "atus\0229\n\rcurrent_state\030\001 \002(\0162\".xtech.self"
    "omat.UpdateStatus.State\022\027\n\017current_versi"
    "on\030\002 \001(\t\")\n\005State\022\010\n\004IDLE\020\000\022\026\n\022UPDATE_IN"
    "_PROGRESS\020\001", 171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  UpdateStatus::default_instance_ = new UpdateStatus();
  UpdateStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2eproto {
  StaticDescriptorInitializer_api_2eproto() {
    protobuf_AddDesc_api_2eproto();
  }
} static_descriptor_initializer_api_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* UpdateStatus_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateStatus_State_descriptor_;
}
bool UpdateStatus_State_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpdateStatus_State UpdateStatus::IDLE;
const UpdateStatus_State UpdateStatus::UPDATE_IN_PROGRESS;
const UpdateStatus_State UpdateStatus::State_MIN;
const UpdateStatus_State UpdateStatus::State_MAX;
const int UpdateStatus::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateStatus::kCurrentStateFieldNumber;
const int UpdateStatus::kCurrentVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateStatus::UpdateStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xtech.selfomat.UpdateStatus)
}

void UpdateStatus::InitAsDefaultInstance() {
}

UpdateStatus::UpdateStatus(const UpdateStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xtech.selfomat.UpdateStatus)
}

void UpdateStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  current_state_ = 0;
  current_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateStatus::~UpdateStatus() {
  // @@protoc_insertion_point(destructor:xtech.selfomat.UpdateStatus)
  SharedDtor();
}

void UpdateStatus::SharedDtor() {
  current_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UpdateStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateStatus_descriptor_;
}

const UpdateStatus& UpdateStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2eproto();
  return *default_instance_;
}

UpdateStatus* UpdateStatus::default_instance_ = NULL;

UpdateStatus* UpdateStatus::New(::google::protobuf::Arena* arena) const {
  UpdateStatus* n = new UpdateStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:xtech.selfomat.UpdateStatus)
  if (_has_bits_[0 / 32] & 3u) {
    current_state_ = 0;
    if (has_current_version()) {
      current_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xtech.selfomat.UpdateStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xtech.selfomat.UpdateStatus.State current_state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xtech::selfomat::UpdateStatus_State_IsValid(value)) {
            set_current_state(static_cast< ::xtech::selfomat::UpdateStatus_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_current_version;
        break;
      }

      // optional string current_version = 2;
      case 2: {
        if (tag == 18) {
         parse_current_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->current_version().data(), this->current_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xtech.selfomat.UpdateStatus.current_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xtech.selfomat.UpdateStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xtech.selfomat.UpdateStatus)
  return false;
#undef DO_
}

void UpdateStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xtech.selfomat.UpdateStatus)
  // required .xtech.selfomat.UpdateStatus.State current_state = 1;
  if (has_current_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->current_state(), output);
  }

  // optional string current_version = 2;
  if (has_current_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_version().data(), this->current_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xtech.selfomat.UpdateStatus.current_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->current_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xtech.selfomat.UpdateStatus)
}

::google::protobuf::uint8* UpdateStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xtech.selfomat.UpdateStatus)
  // required .xtech.selfomat.UpdateStatus.State current_state = 1;
  if (has_current_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->current_state(), target);
  }

  // optional string current_version = 2;
  if (has_current_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->current_version().data(), this->current_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xtech.selfomat.UpdateStatus.current_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->current_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xtech.selfomat.UpdateStatus)
  return target;
}

int UpdateStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:xtech.selfomat.UpdateStatus)
  int total_size = 0;

  // required .xtech.selfomat.UpdateStatus.State current_state = 1;
  if (has_current_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->current_state());
  }
  // optional string current_version = 2;
  if (has_current_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_version());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xtech.selfomat.UpdateStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xtech.selfomat.UpdateStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xtech.selfomat.UpdateStatus)
    MergeFrom(*source);
  }
}

void UpdateStatus::MergeFrom(const UpdateStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xtech.selfomat.UpdateStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_current_state()) {
      set_current_state(from.current_state());
    }
    if (from.has_current_version()) {
      set_has_current_version();
      current_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_version_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xtech.selfomat.UpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateStatus::CopyFrom(const UpdateStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xtech.selfomat.UpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpdateStatus::Swap(UpdateStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateStatus::InternalSwap(UpdateStatus* other) {
  std::swap(current_state_, other->current_state_);
  current_version_.Swap(&other->current_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateStatus_descriptor_;
  metadata.reflection = UpdateStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateStatus

// required .xtech.selfomat.UpdateStatus.State current_state = 1;
bool UpdateStatus::has_current_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateStatus::set_has_current_state() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateStatus::clear_has_current_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateStatus::clear_current_state() {
  current_state_ = 0;
  clear_has_current_state();
}
 ::xtech::selfomat::UpdateStatus_State UpdateStatus::current_state() const {
  // @@protoc_insertion_point(field_get:xtech.selfomat.UpdateStatus.current_state)
  return static_cast< ::xtech::selfomat::UpdateStatus_State >(current_state_);
}
 void UpdateStatus::set_current_state(::xtech::selfomat::UpdateStatus_State value) {
  assert(::xtech::selfomat::UpdateStatus_State_IsValid(value));
  set_has_current_state();
  current_state_ = value;
  // @@protoc_insertion_point(field_set:xtech.selfomat.UpdateStatus.current_state)
}

// optional string current_version = 2;
bool UpdateStatus::has_current_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateStatus::set_has_current_version() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateStatus::clear_has_current_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateStatus::clear_current_version() {
  current_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_current_version();
}
 const ::std::string& UpdateStatus::current_version() const {
  // @@protoc_insertion_point(field_get:xtech.selfomat.UpdateStatus.current_version)
  return current_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateStatus::set_current_version(const ::std::string& value) {
  set_has_current_version();
  current_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xtech.selfomat.UpdateStatus.current_version)
}
 void UpdateStatus::set_current_version(const char* value) {
  set_has_current_version();
  current_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xtech.selfomat.UpdateStatus.current_version)
}
 void UpdateStatus::set_current_version(const char* value, size_t size) {
  set_has_current_version();
  current_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xtech.selfomat.UpdateStatus.current_version)
}
 ::std::string* UpdateStatus::mutable_current_version() {
  set_has_current_version();
  // @@protoc_insertion_point(field_mutable:xtech.selfomat.UpdateStatus.current_version)
  return current_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UpdateStatus::release_current_version() {
  // @@protoc_insertion_point(field_release:xtech.selfomat.UpdateStatus.current_version)
  clear_has_current_version();
  return current_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateStatus::set_allocated_current_version(::std::string* current_version) {
  if (current_version != NULL) {
    set_has_current_version();
  } else {
    clear_has_current_version();
  }
  current_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), current_version);
  // @@protoc_insertion_point(field_set_allocated:xtech.selfomat.UpdateStatus.current_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace selfomat
}  // namespace xtech

// @@protoc_insertion_point(global_scope)
